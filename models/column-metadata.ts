/*
Coalesce API

REST API for performing operations with the Coalesce backend.

The version of the OpenAPI document: 1.0.0


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { ColumnReference } from './column-reference';
import { HashMetadata } from './hash-metadata';
import { IntermediateColumnRefResult } from './intermediate-column-ref-result';
import { SourceColumnReference } from './source-column-reference';

/**
 * 
 * @export
 * @interface ColumnMetadata
 */
export interface ColumnMetadata {
    /**
     * 
     * @type {string}
     * @memberof ColumnMetadata
     */
    'description': string;
    /**
     * 
     * @type {{ [key: string]: boolean; }}
     * @memberof ColumnMetadata
     */
    'appliedColumnTests'?: { [key: string]: boolean; };
    /**
     * 
     * @type {string}
     * @memberof ColumnMetadata
     */
    'columnID': string;
    /**
     * 
     * @type {Array<IntermediateColumnRefResult>}
     * @memberof ColumnMetadata
     */
    'columnReferences'?: Array<IntermediateColumnRefResult>;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof ColumnMetadata
     */
    'config'?: { [key: string]: any; };
    /**
     * 
     * @type {string}
     * @memberof ColumnMetadata
     */
    'dataType': string;
    /**
     * 
     * @type {string}
     * @memberof ColumnMetadata
     */
    'defaultValue'?: string;
    /**
     * 
     * @type {HashMetadata}
     * @memberof ColumnMetadata
     */
    'hashDetails'?: HashMetadata;
    /**
     * 
     * @type {Array<ColumnReference>}
     * @memberof ColumnMetadata
     */
    'hashedColumns'?: Array<ColumnReference>;
    /**
     * Tags the column as a business key.
     * @type {boolean}
     * @memberof ColumnMetadata
     */
    'isBusinessKey'?: boolean;
    /**
     * Tags the column as a change tracking column in type 2 dimensions.
     * @type {boolean}
     * @memberof ColumnMetadata
     */
    'isChangeTracking'?: boolean;
    /**
     * Tags the column as a surrogate key, e.g. DIM_CUSTOMER_KEY.
     * @type {boolean}
     * @memberof ColumnMetadata
     */
    'isSurrogateKey'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ColumnMetadata
     */
    'keyColumnType'?: ColumnMetadataKeyColumnTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof ColumnMetadata
     */
    'name': string;
    /**
     * 
     * @type {boolean}
     * @memberof ColumnMetadata
     */
    'nullable': boolean;
    /**
     * Tags the column as a primary key.
     * @type {boolean}
     * @memberof ColumnMetadata
     */
    'primaryKey'?: boolean;
    /**
     * 
     * @type {Array<SourceColumnReference>}
     * @memberof ColumnMetadata
     */
    'sources'?: Array<SourceColumnReference>;
    /**
     * 
     * @type {string}
     * @memberof ColumnMetadata
     */
    'systemColumnType'?: ColumnMetadataSystemColumnTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof ColumnMetadata
     */
    'transform'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ColumnMetadata
     */
    'uniqueKey'?: boolean;
}

type ColumnMetadataKeyColumnTypeEnum = 'None' | 'primaryBusinessKey' | 'surrogateKey'
type ColumnMetadataSystemColumnTypeEnum = 'None' | 'sysCreateDate' | 'sysCurrentFlag' | 'sysEndDate' | 'sysStartDate' | 'sysUpdateDate' | 'sysVersion'


